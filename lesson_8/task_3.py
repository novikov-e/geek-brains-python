"""
3. Создайте собственный класс-исключение, который должен проверять содержимое
списка на наличие только чисел. Проверить работу исключения на реальном
примере. Запрашивать у пользователя данные и заполнять список необходимо только
числами. Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
пока пользователь сам не остановит работу скрипта, введя, например, команду
«stop». При этом скрипт завершается, сформированный список с числами выводится
на экран.
Подсказка: для этого задания примем, что пользователь может вводить только
числа и строки. Во время ввода пользователем очередного элемента необходимо
реализовать проверку типа элемента. Вносить его в список, только если введено
число. Класс-исключение должен не позволить пользователю ввести текст
(не число) и отобразить соответствующее сообщение. При этом работа скрипта не
должна завершаться.
"""
import re


class NotNumberError(Exception):
    def __init__(self, txt):
        self.txt = txt


my_list = []
while True:
    input_str = input('Введите число: ')
    if input_str == 'стоп':
        break
    try:
        if re.compile(r"[0-9]+").search(input_str):
            my_list.append(int(input_str))
        else:
            raise NotNumberError('Введенное значение не является числом!')
    except NotNumberError as err:
        print(err)

print(my_list)
